!function(){"use strict";!function(){var t=JSON.parse('[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"ONI_GIFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONI_MAX","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONI_PUBLIC","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PURCHASE_LIMIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"addresses","type":"address[]"}],"name":"addToAllowList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"allowListClaimedBy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allowListMaxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"areTokensRevealed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"to","type":"address[]"}],"name":"gift","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isAllowListActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"onAllowList","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proof","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"numberOfTokens","type":"uint256"}],"name":"purchase","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"numberOfTokens","type":"uint256"}],"name":"purchaseAllowList","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"addresses","type":"address[]"}],"name":"removeFromAllowList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxMint","type":"uint256"}],"name":"setAllowListMaxMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"URI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"URI","type":"string"}],"name":"setContractURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_isActive","type":"bool"}],"name":"setIsActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_isAllowListActive","type":"bool"}],"name":"setIsAllowListActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"proofString","type":"string"}],"name":"setProof","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"revealedBaseURI","type":"string"}],"name":"setRevealedBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]');const e="IDLE",n="NOT_CONNECTED",a="CONNECTED",i="WRONG_NETWORK",s="UNSUPPORTED_BROWSER";function o(t,e){const o=`Connect to Ethereum ${e.getConfig("network").toUpperCase()}`,r=`Connected to Ethereum ${e.getConfig("network").toUpperCase()}`,u=`Wrong network, change to Ethereum ${e.getConfig("network").toUpperCase()}`,p=t.querySelector("#connectedLight"),l=t.querySelector("#connectedNetwork");return{render:function(){switch(e.getState()){case n:p.classList.remove("connected"),p.classList.remove("notmainnet"),p.classList.add("disconnected"),l.innerText=o;break;case a:p.classList.remove("disconnected"),p.classList.remove("notmainnet"),p.classList.add("connected"),l.innerText=r;break;case i:p.classList.remove("disconnected"),p.classList.add("connected"),p.classList.add("notmainnet"),l.innerText=u;break;case s:p.classList.remove("connected"),p.classList.remove("notmainnet"),p.classList.add("disconnected"),l.innerText="Please use a browser that supports Metamask"}}}}function r(t,e){const o=t.querySelector("form"),r=t.querySelector("#titleExtra"),l=t.querySelector("#walletConnect"),y=t.querySelector("#allowListErrorLabel"),c=t.querySelector("#qtyMint"),d=t.querySelector("#qtySelect"),m=t.querySelector("#costLabel"),f=t.querySelector("#purchaseBtn"),w=t.querySelector("#network-name");function b(){w.innerText=e.getConfig("network").toUpperCase(),u(y,null),function(t,e){switch(e.getState()){case n:t.innerText="CONNECT YOUR WALLET";break;case a:t.innerText="CONNECTED";break;case i:t.innerText="SWITCH TO {{network}}".replace("{{network}}",e.getConfig("network").toUpperCase());break;case s:t.innerText="GET METAMASK"}}(l,e),function(t,e){e?(t.innerText="PRE-SALE",t.style.color="#03BDB8"):t.innerText=""}(r,e.isAllowListActive()),function(t,e){const o=!e.isActive(),r=e.getState()===a,u=e.getState()===n,p=e.getState()===i,l=e.getState()===s,y=e.onAllowList(),c=e.canMint();o||u||l||p?t.style.display="none":r&&(t.style.display=y&&c?"block":"none")}(o,e),e.getState()===a?(e.isActive()?e.onAllowList()?e.canMint()||u(y,"You have reached the maximum available amount you can mint."):u(y,"You are not on the Allow List. Try again with different wallet."):u(y,"The contract is not active yet. Check back later."),c.innerHTML=`<strong>${e.calculatedMaxMint()}</strong>`,function(t,e){if(e.toNumber()===t.children.length);else{p(t);for(let n=0;n<e;n++){const e=document.createElement("option");e.value=n+1,e.textContent=n+1,e.selected=!0,t.appendChild(e)}}}(d,e.calculatedMaxMint()),T()):p(d)}async function T(){if(d.value){const t=ethers.BigNumber.from(d.value),n=await e.getContract().PRICE();m.innerHTML=ethers.utils.formatEther(n.mul(t))}}return l.addEventListener("click",e.connect),f.addEventListener("click",(async function(t){if(t.preventDefault(),!await e.getContract().isActive())return void e.initialize();const n=e.getProvider().getSigner(),a=await n.getAddress(),i=await e.getContract().PRICE(),s=d.value,r=i.mul(s);let u;if(await e.getContract().isAllowListActive()){if(!await e.getContract().onAllowList(a))return void e.initialize();u=await e.getContract().connect(n).purchaseAllowList(s,{value:r})}else u=await e.getContract().connect(n).purchase(s,{value:r});(function(t,e){t.innerText="MINTING...",e.style.transition="opacity 0.25s ease",e.style.pointerEvents="none",e.style.opacity="0.5"})(f,o),await u.wait(),await e.fetchData(),b(),function(t,e){t.innerText="MINT",e.style.transition="opacity 0.25s ease",e.style.pointerEvents="initial",e.style.opacity="1"}(f,o)})),d.addEventListener("change",T),{render:b}}function u(t,e){e?(t.innerText=e,t.style.display="block"):t.style.display="none"}function p(t){for(;t.lastElementChild;)t.removeChild(t.lastElementChild)}function l(t,n){const a=t.querySelector("#quantityAvail"),o=t.querySelector("#contractAddress");return{render:function(){if(n.getState()===e)return void(t.style.display="none");if(n.getState()===s)return void(t.style.display="none");if(n.getState()===i)return void(t.style.display="none");t.style.display="block",o.href=`https://etherscan.io/address/${n.getConfig("address")}`,o.target="_blank";const r=n.totalSupply(),u=n.ONI_PUBLIC(),p=Math.max(u.sub(r).toNumber(),0);a.innerText=p.toLocaleString()}}}const y={network:"mainnet",chainId:"0x1",address:"0x3bf2922f4520a8BA0c2eFC3D2a1539678DaD5e9D",deeplink:"https://metamask.app.link/dapp/0n1force.com"};(()=>{const u=function(o){const r=new Set;let u,p,l,y,c,d,m,f,w,b,T,v,g=!1,h=e;function M(){for(let t of r){if("function"!=typeof t.render)throw Error("An attached component should export a render method");t.render()}}async function C(){try{l=window.ethereum?.chainId,u=new ethers.providers.Web3Provider(window.ethereum,"any"),p=new ethers.Contract(o.address,t,u),window.contract=p,await O()?([m,w,T,y,c,d]=await Promise.all([p.isActive(),p.isAllowListActive(),p.allowListMaxMint(),p.ONI_PUBLIC(),p.PRICE(),p.PURCHASE_LIMIT()]),await x(),await A()):h=i,g||(window.ethereum.on("chainChanged",I),window.ethereum.on("accountsChanged",k),p.on("Transfer",function(t,e){let n=!1;return()=>{n||(n=!0,setTimeout((()=>{n=!1,t.apply(this,arguments)}),e))}}(L,2500)),g=!0)}catch(t){h=s}M()}async function A(){[f,b,v]=await Promise.all([p.totalSupply(),S(),E()])}async function I(t){t!==l&&(await C(),M())}async function L(){await O()&&await A(),M()}async function k(){await C(),M()}async function x(){h=await O()?await async function(){return 0!==(await u.listAccounts()).length}()?a:n:i}async function S(){if(h===a){if(!w)return!0;const{selectedAddress:t}=window.ethereum;return await p.onAllowList(t)}return!1}async function E(){let t;if(h===a){const{selectedAddress:e}=window.ethereum;if(w){const n=await p.allowListClaimedBy(e);t=T.sub(n)}else t=d;const n=y.sub(await p.totalSupply());return n.lt(t)&&(t=n),t.lt(ethers.BigNumber.from("0"))?ethers.BigNumber.from("0"):t}return ethers.BigNumber.from("0")}async function O(){return await u.getNetwork(),window.ethereum.chainId===o.chainId}return{getState:()=>h,getContract:()=>p,getProvider:()=>u,getConfig:t=>o[t],isActive:()=>m,ONI_PUBLIC:()=>y,PRICE:()=>c,PURCHASE_LIMIT:()=>d,totalSupply:()=>f,isAllowListActive:()=>w,onAllowList:()=>b,canMint:()=>v&&!v.isZero(),calculatedMaxMint:()=>v,fetchData:A,connect:async function(){if(h!==s)if(await O()){try{await u.send("eth_requestAccounts"),h=a}catch{h=n}M()}else{try{await async function(){await u.send("wallet_switchEthereumChain",[{chainId:o.chainId}])}(),await x(),await A()}catch{h=i}M()}else/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?window.open(o.deeplink):window.open("https://metamask.io/download","_blank")},initialize:C,attachComponent:function(t,e){r.add(e(t,this))}}}(y),p=document.querySelector("#networkBox"),c=document.querySelector("#mintBox"),d=document.querySelector("#counterBox");p&&u.attachComponent(p,o),c&&u.attachComponent(c,r),d&&u.attachComponent(d,l),u.initialize()})()}()}();